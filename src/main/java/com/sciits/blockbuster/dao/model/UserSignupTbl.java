package com.sciits.blockbuster.dao.model;
// Generated Mar 14, 2017 4:58:39 PM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.sciits.blockbuster.model.BaseData;

/**
 * UserSignupTbl generated by hbm2java
 */
@Entity
@Table(name = "USER_SIGNUP_TBL")
public class UserSignupTbl extends BaseData  {

	private int userSignupId;
	private UserTbl userTbl;
	private AddressTypeTbl addressTypeTbl;
	private CountryTbl countryTbl;
	private RoleTbl roleTbl;
	private String username;
	private String password;
	private String firstName;
	private String lastName;
	private String streetAddress;
	private String city;
	private String zipcode;
	private String emailAddress;
	private String phone;
	private String fax;
	private String organizationName;
	private String passwordQuestion;
	private String passwordAnswer;
	private String authorizedFlag;
	private Date authorizationDt;
	private Date createdDatetime;

	public UserSignupTbl() {
	}

	public UserSignupTbl(int userSignupId, AddressTypeTbl addressTypeTbl, CountryTbl countryTbl, String firstName,
			RoleTbl roleTbl,String username, String password,String lastName, String streetAddress, 
			String city, String zipcode, String emailAddress, String phone,String passwordQuestion,
			String passwordAnswer,	String  authorizedFlag, Date authorizationDt, Date createdDatetime) {
		this.userSignupId = userSignupId;
		this.addressTypeTbl = addressTypeTbl;
		this.countryTbl = countryTbl;
		this.roleTbl = roleTbl;
		this.username = username;
		this.password = password;
		this.firstName = firstName;
		this.lastName = lastName;
		this.streetAddress = streetAddress;
		this.city = city;
		this.zipcode = zipcode;
		this.emailAddress = emailAddress;
		this.passwordQuestion = passwordQuestion;
		this.passwordAnswer = passwordAnswer;
		this.phone = phone;
		this.authorizedFlag = authorizedFlag;
		this.authorizationDt = authorizationDt;
		this.createdDatetime = createdDatetime;
	}

	public UserSignupTbl(int userSignupId, UserTbl userTbl, AddressTypeTbl addressTypeTbl, CountryTbl countryTbl,
			RoleTbl roleTbl, String username, String password,String firstName, String lastName, String streetAddress, 
			String city, String zipcode, String emailAddress,String passwordQuestion,String passwordAnswer,
			String phone, String fax, String organizationName, String authorizedFlag, Date authorizationDt,
			Date createdDatetime) {
		this.userSignupId = userSignupId;
		this.userTbl = userTbl;
		this.addressTypeTbl = addressTypeTbl;
		this.roleTbl = roleTbl;
		this.countryTbl = countryTbl;
		this.firstName = firstName;
		this.lastName = lastName;
		this.streetAddress = streetAddress;
		this.city = city;
		this.zipcode = zipcode;
		this.emailAddress = emailAddress;
		this.phone = phone;
		this.passwordQuestion = passwordQuestion;
		this.passwordAnswer = passwordAnswer;
		this.fax = fax;
		this.organizationName = organizationName;
		this.authorizedFlag = authorizedFlag;
		this.authorizationDt = authorizationDt;
		this.createdDatetime = createdDatetime;
	}

	@Id
	@GeneratedValue
	@Column(name = "USER_SIGNUP_ID", unique = true, nullable = false)
	public int getUserSignupId() {
		return this.userSignupId;
	}

	public void setUserSignupId(int userSignupId) {
		this.userSignupId = userSignupId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AUTHORIZATION_BY_USER_ID")
	public UserTbl getUserTbl() {
		return this.userTbl;
	}

	public void setUserTbl(UserTbl userTbl) {
		this.userTbl = userTbl;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ADDRESS_TYPE_ID", nullable = false)
	public AddressTypeTbl getAddressTypeTbl() {
		return this.addressTypeTbl;
	}

	public void setAddressTypeTbl(AddressTypeTbl addressTypeTbl) {
		this.addressTypeTbl = addressTypeTbl;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COUNTRY_ID", nullable = false)
	public CountryTbl getCountryTbl() {
		return this.countryTbl;
	}

	public void setCountryTbl(CountryTbl countryTbl) {
		this.countryTbl = countryTbl;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ROLE_ID", nullable = false)
	public RoleTbl getRoleTbl() {
		return this.roleTbl;
	}

	public void setRoleTbl(RoleTbl roleTbl) {
		this.roleTbl = roleTbl;
	}
	
	
	@Column(name = "USERNAME", unique = true, nullable = false, length = 20)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "PASSWORD", nullable = false, length = 20)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	
	@Column(name = "FIRST_NAME", nullable = false, length = 60)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", nullable = false, length = 60)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "STREET_ADDRESS", nullable = false, length = 45)
	public String getStreetAddress() {
		return this.streetAddress;
	}

	public void setStreetAddress(String streetAddress) {
		this.streetAddress = streetAddress;
	}

	@Column(name = "CITY", nullable = false, length = 25)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "ZIPCODE", nullable = false, length = 10)
	public String getZipcode() {
		return this.zipcode;
	}

	public void setZipcode(String zipcode) {
		this.zipcode = zipcode;
	}

	@Column(name = "EMAIL_ADDRESS", nullable = false)
	public String getEmailAddress() {
		return this.emailAddress;
	}

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	@Column(name = "PHONE", nullable = false, length = 15)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "FAX", length = 15)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "ORGANIZATION_NAME")
	public String getOrganizationName() {
		return this.organizationName;
	}

	public void setOrganizationName(String organizationName) {
		this.organizationName = organizationName;
	}
	
	
	@Column(name = "PASSWORD_QUESTION", nullable = false)
	public String getPasswordQuestion() {
		return this.passwordQuestion;
	}

	public void setPasswordQuestion(String passwordQuestion) {
		this.passwordQuestion = passwordQuestion;
	}

	@Column(name = "PASSWORD_ANSWER", nullable = false)
	public String getPasswordAnswer() {
		return this.passwordAnswer;
	}

	public void setPasswordAnswer(String passwordAnswer) {
		this.passwordAnswer = passwordAnswer;
	}
	

	@Column(name = "AUTHORIZED_FLAG", nullable = false, length = 1)
	public String getAuthorizedFlag() {
		return this.authorizedFlag;
	}

	public void setAuthorizedFlag(String authorizedFlag) {
		this.authorizedFlag = authorizedFlag;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "AUTHORIZATION_DT", nullable = false, length = 23)
	public Date getAuthorizationDt() {
		return this.authorizationDt;
	}

	public void setAuthorizationDt(Date authorizationDt) {
		this.authorizationDt = authorizationDt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATETIME", nullable = false, length = 23)
	public Date getCreatedDatetime() {
		return this.createdDatetime;
	}

	public void setCreatedDatetime(Date createdDatetime) {
		this.createdDatetime = createdDatetime;
	}

}
